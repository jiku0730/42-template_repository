name: One-Click Strip PR (develop -> master)

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Source branch to base the strip branch"
        default: "develop"
        required: true
        type: string
      exclude_paths:
        description: "Space-separated paths to exclude from PR (not needed for submission)"
        default: ".github .vscode docs .gitlab-ci.yml"
        required: true
        type: string
      use_pat_for_pr:
        description: "Use PAT (PR_CREATOR_TOKEN) to create PR (set true if 403)"
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  make_strip_pr:
    runs-on: ubuntu-latest
    env:
      SRC: ${{ inputs.source_branch }}
      EXCLUDE_PATHS: ${{ inputs.exclude_paths }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master  # ← ここを追加（任意だが安全）

      - name: Configure Git (signed commits by Actions)
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config commit.gpgsign true

      - name: Fetch refs
        run: |
          set -e
          git fetch --all --prune
          git fetch origin "+refs/heads/${SRC}:refs/remotes/origin/${SRC}" \
                          "+refs/heads/master:refs/remotes/origin/master"

      - name: Create strip branch from source (develop untouched)
        id: mk
        run: |
          STRIP="strip/${SRC##*/}-to-master-${GITHUB_RUN_ID}"
          git switch -c "$STRIP" "refs/remotes/origin/${SRC}"
          echo "strip=$STRIP" >> "$GITHUB_OUTPUT"

      - name: Remove only excluded paths (match master state or delete)
        run: |
          set -e
          for p in $EXCLUDE_PATHS; do
            # ブランチに存在する場合のみ処理
            if git ls-tree -r --name-only HEAD | grep -qx "$p" || [ -e "$p" ]; then
              # master にも同名があるなら master の内容へ復元、無ければ削除
              if git ls-tree -r --name-only origin/master | grep -qx "$p"; then
                git restore --staged --worktree --source=origin/master -- "$p" || true
              else
                rm -rf -- "$p"
                git rm -r --cached --ignore-unmatch -- "$p" || true
              fi
            fi
          done

      - name: Commit strip changes (if any)
        run: |
          if ! git diff --quiet; then
            git add -A
            git commit -m "chore: strip excluded paths for submission (EXCLUDE_PATHS='${EXCLUDE_PATHS}')"
          else
            echo "No strip changes needed."
          fi

      - name: Push strip branch
        run: git push -u origin "${{ steps.mk.outputs.strip }}"

      # ---- PR creation via gh api (works on older gh) ----
      - name: Open or reuse PR to master
        id: pr
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ inputs.use_pat_for_pr && secrets.PR_CREATOR_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          set -e
          OWNER="${REPO%%/*}"
          NAME="${REPO##*/}"
          STRIP="${{ steps.mk.outputs.strip }}"
          BASE="master"
          TITLE="Submission PR: ${SRC} -> master (strip excluded paths)"
          BODY=$'This PR was created by workflow.\nExcluded paths: '"\`${EXCLUDE_PATHS}\`.\nPlease **Rebase and merge**.\n\nNote: develop remains unchanged."

          # 既存の同一ヘッドPRがあれば再利用
          EXIST_NUM="$(gh api -H "Accept: application/vnd.github+json" \
            "/repos/$OWNER/$NAME/pulls?head=$OWNER:$STRIP&base=$BASE&state=open" \
            --jq '.[0].number // empty' || true)"

          if [ -n "$EXIST_NUM" ]; then
            echo "number=$EXIST_NUM" >> "$GITHUB_OUTPUT"
          else
            NEW_NUM="$(gh api -H "Accept: application/vnd.github+json" -X POST \
              "/repos/$OWNER/$NAME/pulls" \
              -f base="$BASE" -f head="$STRIP" -f title="$TITLE" -f body="$BODY" \
              --jq '.number')"
            echo "number=$NEW_NUM" >> "$GITHUB_OUTPUT"
          fi

      - name: Comment hint on PR
        if: ${{ steps.pr.outputs.number != '' }}
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ inputs.use_pat_for_pr && secrets.PR_CREATOR_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          OWNER="${REPO%%/*}"
          NAME="${REPO##*/}"
          NUM="${{ steps.pr.outputs.number }}"
          gh api -X POST "/repos/$OWNER/$NAME/issues/$NUM/comments" \
            -f body='✅ Strip branch is ready. **Rebase and merge** when checks/reviews pass. `develop` is untouched.'
